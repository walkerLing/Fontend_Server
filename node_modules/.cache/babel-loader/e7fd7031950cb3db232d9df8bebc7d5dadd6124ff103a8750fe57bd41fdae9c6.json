{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'BlockStorage',\n  data() {\n    return {\n      FormData: {\n        uuid: \"\",\n        certOfOrigin: \"\",\n        storehouse: \"\",\n        plantDevelopmentReq: {\n          temperature: \"\",\n          humidity: \"\",\n          beam: \"\"\n          // images: [],\n        }\n      }\n    };\n  },\n\n  methods: {\n    submitForm(FormData) {\n      this.$refs[FormData].validate(valid => {\n        if (valid) {\n          // alert('submit!');\n          console.log(JSON.stringify(this.FormData));\n          this.onSubmit();\n        } else {\n          // console.log('error submit!!');\n          this.notice12();\n          return false;\n        }\n      });\n    },\n    resetForm(FormData) {\n      this.$refs[FormData].resetFields();\n      this.notice13();\n    },\n    notice11() {\n      this.$notify({\n        title: \"数据上传成功\",\n        message: \"所填数据将上传到区块链\",\n        duration: 0,\n        type: \"success\"\n      });\n    },\n    notice13() {\n      this.$notify11({\n        title: \"数据重置成功\",\n        message: \"所填数据已进行重置\",\n        duration: 0,\n        type: \"success\"\n      });\n    },\n    notice12() {\n      this.$notify({\n        title: \"数据上传失败\",\n        message: \"请检查数据类型或网络环境，稍后再次上传\",\n        duration: 0,\n        type: \"fail\"\n      });\n    },\n    onSubmit() {\n      this.$axios.post({\n        // type: \"post\",\n        // contentType: \"application/json\",\n        // dataType: \"json\",\n        url: \"http://fruit.mingbyte.com:55001/gateway/fruit/invokeChaincode\",\n        data: JSON.stringify(this.FormData)\n      }).then(res => {\n        console.log(\"请求发送成功\", res);\n        this.notice11();\n      }).catch(error => {\n        console.log(\"请求发送失败\", error);\n        this.notice12();\n      });\n      // this.$axios({\n      //   type:\"post\",\n      //   contentType:\"application/json\",\n      //   dataType:\"json\",\n      //   data:JSON.stringify(this.FormData),\n      //   url:\"http://fruit.mingbyte.com:55001/gateway/fruit/invokeChaincode\",\n      //   success:function(res){\n      //     console.log(\"发送请求成功！\",res);\n      //   },\n      //   error:function(err){\n      //     console.log(\"发送请求失败！\",err.statusText);\n      //   }\n      // });\n    }\n  }\n};","map":{"version":3,"mappings":"AA2DA;AACA;EACAA;EACAC;IACA;MACAC;QACAC;QACAC;QACAC;QACAC;UACAC;UACAC;UACAC;UACA;QACA;MACA;IACA;EACA;;EACAC;IACAC;MACA;QACA;UACA;UACAC;UACA;QACA;UACA;UACA;UACA;QACA;MACA;IACA;IACAC;MACA;MACA;IACA;IAKAC;MACA;QACAC;QACAC;QACAC;QACAC;MACA;IACA;IACAC;MACA;QACAJ;QACAC;QACAC;QACAC;MACA;IACA;IACAE;MACA;QACAL;QACAC;QACAC;QACAC;MACA;IACA;IAKAG;MACA;QACA;QACA;QACA;QACAC;QACArB;MACA;QACAW;QACA;MACA;QACAA;QACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACA;EAEA;AACA","names":["name","data","FormData","uuid","certOfOrigin","storehouse","plantDevelopmentReq","temperature","humidity","beam","methods","submitForm","console","resetForm","notice11","title","message","duration","type","notice13","notice12","onSubmit","url"],"sourceRoot":"src/components","sources":["BlockStorage.vue"],"sourcesContent":["<template>\r\n  <!-- 区块链溯源相关信息可视化展示区域 -->\r\n  <div class=\"visualizationOfBlock\">\r\n    <div id=\"info_patient\" style=\"padding-left:7%\">\r\n      <!-- 卡片放置表格 -->\r\n      <el-card style=\"border-radius: 30px;background-color: rgba(20, 177, 212,0.2);width:877px;text-align:center;\">\r\n\r\n        <div slot=\"header\" class=\"clearfix\">\r\n          <span id=\"fonts\" style=\"color: white;\">存储信息表单如下</span>\r\n        </div>\r\n\r\n        <el-form :model=\"FormData\" ref=\"FormData\" label-position=\"left\" label-width=\"80px\">\r\n\r\n          <!-- <el-form-item label=\"溯源码\" :rules=\"[\r\n            { required: true, message: '溯源码不能为空' },\r\n            { type: 'number', message: '溯源码必须为数字值' }\r\n          ]\"\r\n          >\r\n\r\n            <el-input v-model.number=\"FormData.uuid\" placeholder=\"请输入溯源码\"  autocomplete=\"off\"></el-input> -->\r\n\r\n\r\n          <el-form-item label=\"溯源码\" prop=\"uuid\" :rules=\"[\r\n            { required: true, message: '溯源码不能为空' },\r\n            { type: 'number', message: '溯源码必须为数字值' }\r\n          ]\">\r\n            <el-input v-model.number=\"FormData.uuid\" autocomplete=\"off\" placeholder=\"请输入溯源码\"></el-input>\r\n\r\n\r\n          </el-form-item>\r\n\r\n          <el-form-item label=\"仓库名称\">\r\n            <el-input v-model=\"FormData.storehouse\" placeholder=\"请输入仓库名称\"></el-input>\r\n          </el-form-item>\r\n\r\n          <el-form-item label=\"温度\">\r\n            <el-input v-model=\"FormData.plantDevelopmentReq.temperature\" placeholder=\"请输入温度\"></el-input>\r\n          </el-form-item>\r\n\r\n          <el-form-item label=\"湿度\">\r\n            <el-input v-model=\"FormData.plantDevelopmentReq.humidity\" placeholder=\"请输入湿度\"></el-input>\r\n          </el-form-item>\r\n\r\n          <el-form-item label=\"光照强度\">\r\n            <el-input v-model=\"FormData.plantDevelopmentReq.beam\" placeholder=\"请输入光照强度\"></el-input>\r\n          </el-form-item>\r\n\r\n          <el-form-item size=\"large\">\r\n            <el-button type=\"primary\" @click=\"submitForm('FormData')\">提交数据</el-button>\r\n            <el-button @click=\"resetForm('FormData')\">重置表单</el-button> \r\n          </el-form-item>\r\n\r\n        </el-form>\r\n      </el-card>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nexport default {\r\n  name: 'BlockStorage',\r\n  data() {\r\n    return {\r\n      FormData: {\r\n        uuid: \"\",\r\n        certOfOrigin: \"\",\r\n        storehouse: \"\",\r\n        plantDevelopmentReq: {\r\n          temperature: \"\",\r\n          humidity: \"\",\r\n          beam: \"\",\r\n          // images: [],\r\n        }\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    submitForm(FormData) {\r\n      this.$refs[FormData].validate((valid) => {\r\n        if (valid) {\r\n          // alert('submit!');\r\n          console.log(JSON.stringify(this.FormData))\r\n          this.onSubmit();\r\n        } else {\r\n          // console.log('error submit!!');\r\n          this.notice12();\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n    resetForm(FormData) {\r\n      this.$refs[FormData].resetFields();\r\n      this.notice13();\r\n    },\r\n\r\n\r\n\r\n\r\n    notice11() {\r\n      this.$notify({\r\n        title: \"数据上传成功\",\r\n        message: \"所填数据将上传到区块链\",\r\n        duration: 0,\r\n        type: \"success\",\r\n      })\r\n    },\r\n    notice13() {\r\n      this.$notify11({\r\n        title: \"数据重置成功\",\r\n        message: \"所填数据已进行重置\",\r\n        duration: 0,\r\n        type: \"success\",\r\n      })\r\n    },\r\n    notice12() {\r\n      this.$notify({\r\n        title: \"数据上传失败\",\r\n        message: \"请检查数据类型或网络环境，稍后再次上传\",\r\n        duration: 0,\r\n        type: \"fail\",\r\n      })\r\n    },\r\n\r\n\r\n\r\n\r\n    onSubmit() {\r\n      this.$axios.post({\r\n        // type: \"post\",\r\n        // contentType: \"application/json\",\r\n        // dataType: \"json\",\r\n        url: \"http://fruit.mingbyte.com:55001/gateway/fruit/invokeChaincode\",\r\n        data: JSON.stringify(this.FormData)\r\n      }).then(res => {\r\n        console.log(\"请求发送成功\", res)\r\n        this.notice11()\r\n      }).catch(error => {\r\n        console.log(\"请求发送失败\", error)\r\n        this.notice12()\r\n      });\r\n      // this.$axios({\r\n      //   type:\"post\",\r\n      //   contentType:\"application/json\",\r\n      //   dataType:\"json\",\r\n      //   data:JSON.stringify(this.FormData),\r\n      //   url:\"http://fruit.mingbyte.com:55001/gateway/fruit/invokeChaincode\",\r\n      //   success:function(res){\r\n      //     console.log(\"发送请求成功！\",res);\r\n      //   },\r\n      //   error:function(err){\r\n      //     console.log(\"发送请求失败！\",err.statusText);\r\n      //   }\r\n      // });\r\n    }\r\n\r\n  }\r\n}\r\n\r\n</script>\r\n<style scoped>\r\n.el-input {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n#el-divider {\r\n  height: 10px;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}