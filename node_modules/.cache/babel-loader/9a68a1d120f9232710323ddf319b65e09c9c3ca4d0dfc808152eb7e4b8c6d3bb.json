{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  name: 'BlockSearch',\n  data() {\n    return {\n      storage: {},\n      url_0: [],\n      url_1: [],\n      images: [{\n        image: require('.//environments/all_ripe1.jpg')\n      }, {\n        image: require('.//environments/all_ripe2.jpg')\n      }, {\n        image: require('.//environments/all_ripe3.jpg')\n      }, {\n        image: require('.//environments/all_ripe4.jpg')\n      }, {\n        image: require('.//environments/all_ripe5.jpg')\n      }],\n      activeName: \"\"\n    };\n  },\n  mounted() {\n    this.$bus.$on(\"getStorage\", storage => {\n      console.log('我是BlockSearch组件，收到数据', storage.data.plantDevelopment.images);\n      this.storage = storage;\n      this.$axios.get(`http://fruit.mingbyte.com:55001/gateway/fruit/image?key=${this.storage.data.certOfOrigin}`, {\n        timeout: 1000 * 60 * 2\n      }).then(res => {\n        console.log(\"测试测试\");\n        console.log(res.request.responseURL);\n        this.url_0 = res.request.responseURL;\n        console.log(\"获取产地证书成功\");\n      }, err => {\n        console.log(\"请求产地证书失败\", err.message);\n      });\n      let image_url = [];\n      storage.data.plantDevelopment.images.forEach(image => {\n        this.$axios.get(`http://fruit.mingbyte.com:55001/gateway/fruit/image?key=${image}`, {\n          timeout: 1000 * 60 * 2\n        }).then(res => {\n          image_url.push(res.request.responseURL);\n          console.log(\"获取实景图片成功\", res);\n        }, err => {\n          console.log(\"请求实景图片失败\", err.message);\n        });\n      });\n      this.url_1 = image_url;\n    });\n  }\n  // updated() {\n\n  // },\n};","map":{"version":3,"mappings":";AAiIA;AACA;EACAA;EACAC;IACA;MACAC;MACAC;MACAC;MACAC,SACA;QAAAC;MAAA,GACA;QAAAA;MAAA,GACA;QAAAA;MAAA,GACA;QAAAA;MAAA,GACA;QAAAA;MAAA,EACA;MACAC;IACA;EACA;EACAC;IACA;MAEAC;MACA;MAEA;QAAAC;MAAA,QACAC;QACAF;QACAA;QACA;QACAA;MACA,GACAG;QACAH;MACA,EACA;MAEA;MAEAP;QACA;UAAAQ;QAAA,QACAC;UACAE;UACAJ;QACA,GACAG;UACAH;QACA,EACA;MACA;MAEA;IACA;EACA;EACA;;EAEA;AACA","names":["name","data","storage","url_0","url_1","images","image","activeName","mounted","console","timeout","res","err","image_url"],"sourceRoot":"src/components","sources":["BlockSearch.vue"],"sourcesContent":["<template>\r\n  <!-- 区块链溯源相关信息可视化展示区域 -->\r\n  <div class=\"visualizationOfBlock\">\r\n    <div id=\"info_patient\">\r\n      <!-- 卡片放置表格 -->\r\n      <el-card style=\"border-radius: 30px;background-color: rgba(20, 177, 212,0.2);width:876px;text-align:center;\">\r\n        <div slot=\"header\" class=\"clearfix\">\r\n          <span id=\"fonts\">相关信息如下</span>\r\n        </div>\r\n        <el-tabs v-model=\"activeName\">\r\n\r\n          <!-- 获取并展示原产地证书 -->\r\n          <el-tab-pane label=\"原产地证书\" name=\"first\" id=\"certificate\">\r\n            <Transition>\r\n              <div\r\n                style=\"font-family: Helvetica Neue,Helvetica,PingFang SC,Hiragino Sans GB,Microsoft YaHei,微软雅黑,Arial,sans-serif;font-size:large;margin:5%;color:darkred;\">\r\n                产地证书\r\n              </div>\r\n            </Transition>\r\n            <div class=\"cer_pic\">\r\n              <el-image style=\"width: 100%; height: 100%\" :src=\"url_0\"></el-image>\r\n            </div>\r\n            <Transition>\r\n              <div\r\n                style=\"font-family: Helvetica Neue,Helvetica,PingFang SC,Hiragino Sans GB,Microsoft YaHei,微软雅黑,Arial,sans-serif;font-size:large;margin:5%;color:darkred;\">\r\n                产地证书\r\n              </div>\r\n            </Transition>\r\n          </el-tab-pane>\r\n\r\n\r\n\r\n          <el-tab-pane label=\"有关信息\" name=\"second\" id=\"information\">\r\n            <!-- 存放有关信息 -->\r\n            <Transition>\r\n              <div style=\"font-family: Helvetica Neue,Helvetica,PingFang SC,Hiragino Sans GB,Microsoft YaHei,微软雅黑,Arial,sans-serif;\r\n                                          font-size:large; \r\n                                          margin:5%; \r\n                                          color:yellow;\">\r\n                仓库名称：{{ storage.data.storehouse }}\r\n              </div>\r\n            </Transition>\r\n            <Transition>\r\n              <div style=\"font-family: Helvetica Neue,Helvetica,PingFang SC,Hiragino Sans GB,Microsoft YaHei,微软雅黑,Arial,sans-serif;\r\n                                          font-size:large; \r\n                                          margin:5%;\r\n                                          color:yellow;\">\r\n                区块高度：{{ storage.height }}\r\n              </div>\r\n            </Transition>\r\n\r\n            <Transition>\r\n              <div style=\"font-family: Helvetica Neue,Helvetica,PingFang SC,Hiragino Sans GB,Microsoft YaHei,微软雅黑,Arial,sans-serif;\r\n                                          font-size:large;\r\n                                          margin:5%;\r\n                                          color:yellow;\">\r\n                区块哈希：{{ storage.txId }}\r\n              </div>\r\n            </Transition>\r\n\r\n          </el-tab-pane>\r\n\r\n\r\n          <el-tab-pane label=\"温度（℃）\" name=\"third\" id=\"temperatureList\">\r\n            <!-- 存放六日的温度 -->\r\n            <template>\r\n              <el-table :data=\"storage.data.plantDevelopment.temperatureList\" style=\"width: 100%\">\r\n                <el-table-column prop=\"data\" label=\"温度（℃）\" width=\"400px\" align=\"center\">\r\n                </el-table-column>\r\n                <el-table-column prop=\"time\" label=\"时间\" width=\"400px\" align=\"center\">\r\n                </el-table-column>\r\n              </el-table>\r\n            </template>\r\n          </el-tab-pane>\r\n\r\n\r\n          <el-tab-pane label=\"湿度（%rh）\" name=\"fourth\" id=\"humidityList\">\r\n            <!-- 存放六日的湿度 -->\r\n            <template>\r\n              <el-table :data=\"storage.data.plantDevelopment.humidityList\" style=\"width: 100%\">\r\n                <el-table-column prop=\"data\" label=\"湿度（%rh）\" width=\"400px\" align=\"center\">\r\n                </el-table-column>\r\n                <el-table-column prop=\"time\" label=\"时间\" width=\"400px\" align=\"center\">\r\n                </el-table-column>\r\n              </el-table>\r\n            </template>\r\n          </el-tab-pane>\r\n\r\n\r\n          <el-tab-pane label=\"光照强度（lx）\" name=\"fifth\" id=\"beamList\">\r\n            <!-- 存放六日的光照强度 -->\r\n            <template>\r\n              <el-table :data=\"storage.data.plantDevelopment.beamList\" style=\"width: 100%\">\r\n                <el-table-column prop=\"data\" label=\"光照强度（lx）\" width=\"400px\" align=\"center\">\r\n                </el-table-column>\r\n                <el-table-column prop=\"time\" label=\"时间\" width=\"400px\" align=\"center\">\r\n                </el-table-column>\r\n              </el-table>\r\n            </template>\r\n          </el-tab-pane>\r\n\r\n          <el-tab-pane label=\"原产地图片\" name=\"sixth\" id=\"images\">\r\n            <Transition>\r\n              <div\r\n                style=\"font-family: Helvetica Neue,Helvetica,PingFang SC,Hiragino Sans GB,Microsoft YaHei,微软雅黑,Arial,sans-serif;font-size:large;margin:5%;color:darkred;\">\r\n                产地实景\r\n              </div>\r\n            </Transition>\r\n            <div class=\"place_pic\" v-for=\"item in this.url_1\" :key=\"item\">\r\n\r\n              <el-image style=\"width: 100%; height: 100%\" :src=\"url_1\">\r\n              </el-image>\r\n\r\n            </div>\r\n            <Transition>\r\n              <div\r\n                style=\"font-family: Helvetica Neue,Helvetica,PingFang SC,Hiragino Sans GB,Microsoft YaHei,微软雅黑,Arial,sans-serif;font-size:large;margin:5%;color:darkred;\">\r\n                产地实景\r\n              </div>\r\n            </Transition>\r\n          </el-tab-pane>\r\n\r\n        </el-tabs>\r\n      </el-card>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nexport default {\r\n  name: 'BlockSearch',\r\n  data() {\r\n    return {\r\n      storage: {},\r\n      url_0: [],\r\n      url_1: [],\r\n      images: [\r\n        { image: require('.//environments/all_ripe1.jpg') },\r\n        { image: require('.//environments/all_ripe2.jpg') },\r\n        { image: require('.//environments/all_ripe3.jpg') },\r\n        { image: require('.//environments/all_ripe4.jpg') },\r\n        { image: require('.//environments/all_ripe5.jpg') },\r\n      ],\r\n      activeName: \"\",\r\n    }\r\n  },\r\n  mounted() {\r\n    this.$bus.$on(\"getStorage\", (storage) => {\r\n\r\n      console.log('我是BlockSearch组件，收到数据', storage.data.plantDevelopment.images)\r\n      this.storage = storage;\r\n\r\n      this.$axios.get(`http://fruit.mingbyte.com:55001/gateway/fruit/image?key=${this.storage.data.certOfOrigin}`, { timeout: 1000 * 60 * 2 }).then(\r\n        res => {\r\n          console.log(\"测试测试\");\r\n          console.log(res.request.responseURL);\r\n          this.url_0 = res.request.responseURL\r\n          console.log(\"获取产地证书成功\")\r\n        },\r\n        err => {\r\n          console.log(\"请求产地证书失败\", err.message)\r\n        },\r\n      )\r\n\r\n      let image_url = []\r\n\r\n      storage.data.plantDevelopment.images.forEach(image => {\r\n        this.$axios.get(`http://fruit.mingbyte.com:55001/gateway/fruit/image?key=${image}`,{timeout: 1000 * 60 * 2}).then(\r\n          res=>{\r\n            image_url.push(res.request.responseURL);\r\n            console.log(\"获取实景图片成功\",res)\r\n          },\r\n          err =>{\r\n              console.log(\"请求实景图片失败\",err.message)\r\n          },\r\n        )\r\n      })\r\n\r\n      this.url_1 = image_url\r\n    })\r\n  },\r\n  // updated() {\r\n\r\n  // },\r\n}\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.demo-image {\r\n  margin: 50px;\r\n}\r\n\r\n.visualizationOfBlock {\r\n  flex: 6;\r\n  border-radius: 15px;\r\n  width: 985px;\r\n  margin-left: 9%;\r\n}\r\n\r\n#info_patient {\r\n  margin-top: 10px;\r\n  margin-right: 160px;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}