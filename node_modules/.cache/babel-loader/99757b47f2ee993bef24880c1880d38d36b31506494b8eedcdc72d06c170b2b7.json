{"ast":null,"code":"var e,\n  t = [\"scroll\", \"wheel\", \"touchstart\", \"touchmove\", \"touchenter\", \"touchend\", \"touchleave\", \"mouseout\", \"mouseleave\", \"mouseup\", \"mousedown\", \"mousemove\", \"mouseenter\", \"mousewheel\", \"mouseover\"];\nif (function () {\n  var e = !1;\n  try {\n    var t = Object.defineProperty({}, \"passive\", {\n      get: function () {\n        e = !0;\n      }\n    });\n    window.addEventListener(\"test\", null, t), window.removeEventListener(\"test\", null, t);\n  } catch (e) {}\n  return e;\n}()) {\n  var o = EventTarget.prototype.addEventListener;\n  e = o, EventTarget.prototype.addEventListener = function (o, r, n) {\n    var s,\n      a = \"object\" == typeof n && null !== n,\n      i = a ? n.capture : n;\n    (n = a ? function (e) {\n      var t = Object.getOwnPropertyDescriptor(e, \"passive\");\n      return t && !0 !== t.writable && void 0 === t.set ? Object.assign({}, e) : e;\n    }(n) : {}).passive = void 0 !== (s = n.passive) ? s : -1 !== t.indexOf(o) && !0, n.capture = void 0 !== i && i, e.call(this, o, r, n);\n  }, EventTarget.prototype.addEventListener._original = e;\n}","map":{"version":3,"mappings":"IAyB2BA;EAnBrBC,IAAwB,CAC5B,UAAU,SACV,cAAc,aAAa,cAAc,YAAY,cACrD,YAAY,cAAc,WAAW,aAAa,aAAa,cAAc,cAAc;AAiC7F,IC1C6C;EAC3C,IAAIC,KAAY;EAEhB;IACE,IAAMC,IAAOC,OAAOC,eAAe,IAAI,WAAW;MAChDC;QACEJ,KAAY;MAAA;IAAA;IAIhBK,OAAOC,iBAAiB,QAAQ,MAAML,IACtCI,OAAOE,oBAAoB,QAAQ,MAAMN;EAAAA,CACzC,QAAOO;EAET,OAAOR;AAAAA,CD0BeS,IAEH;EACnB,IAAMC,IAAWC,YAAYC,UAAUN;EAlBdR,IAmBPY,GAlBlBC,YAAYC,UAAUN,mBAAmB,UAAUO,GAAMC,GAAUC;IACjE,IAhB6BC;MAgBvBC,IAAyC,mBAAZF,KAAoC,SAAZA;MACrDG,IAAsBD,IAAsBF,EAAQI,UAAUJ;IAAAA,CAEpEA,IAAkBE,IAbK,UAACF;MAC1B,IAAMK,IAAoBlB,OAAOmB,yBAAyBN,GAAS;MAEnE,OAAOK,MAAoD,MAA/BA,EAAkBE,iBAA+CC,MAA1BH,EAAkBI,MACjFtB,OAAOuB,OAAO,IAAIV,KAClBA;IAAAA,CAQsCW,CAAmBX,KAAW,IAC9DC,eAnBMO,OADeP,IAoBaD,EAAQC,WAnBlBA,KAEmB,MAA9CjB,EAAsB4B,QAiBgCd,OA5BpD,GA6BPE,EAAQI,eAAyBI,MAAfL,KAAoDA,GAEtEpB,EAAY8B,KAAKC,MAAMhB,GAAMC,GAAUC;EAAAA,GAGzCJ,YAAYC,UAAUN,iBAAiBwB,YAAYhC;AAAAA","names":["superMethod","supportedPassiveTypes","supported","opts","Object","defineProperty","get","window","addEventListener","removeEventListener","e","eventListenerOptionsSupported","addEvent","EventTarget","prototype","type","listener","options","passive","usesListenerOptions","useCapture","capture","passiveDescriptor","getOwnPropertyDescriptor","writable","undefined","set","assign","getWritableOptions","indexOf","call","this","_original"],"sources":["../src/index.js","../src/utils.js"],"sourcesContent":["import { eventListenerOptionsSupported } from './utils';\n\nconst defaultOptions = {\n  passive: true,\n  capture: false\n};\nconst supportedPassiveTypes = [\n  'scroll', 'wheel',\n  'touchstart', 'touchmove', 'touchenter', 'touchend', 'touchleave',\n  'mouseout', 'mouseleave', 'mouseup', 'mousedown', 'mousemove', 'mouseenter', 'mousewheel', 'mouseover'\n];\nconst getDefaultPassiveOption = (passive, eventName) => {\n  if (passive !== undefined) return passive;\n\n  return supportedPassiveTypes.indexOf(eventName) === -1 ? false : defaultOptions.passive;\n};\n\nconst getWritableOptions = (options) => {\n  const passiveDescriptor = Object.getOwnPropertyDescriptor(options, 'passive');\n    \n  return passiveDescriptor && passiveDescriptor.writable !== true && passiveDescriptor.set === undefined\n    ? Object.assign({}, options)\n    : options;\n};\n\nconst overwriteAddEvent = (superMethod) => {\n  EventTarget.prototype.addEventListener = function (type, listener, options) {\n    const usesListenerOptions = typeof options === 'object' && options !== null;\n    const useCapture          = usesListenerOptions ? options.capture : options;\n\n    options         = usesListenerOptions ? getWritableOptions(options) : {};\n    options.passive = getDefaultPassiveOption(options.passive, type);\n    options.capture = useCapture === undefined ? defaultOptions.capture : useCapture;\n\n    superMethod.call(this, type, listener, options);\n  };\n\n  EventTarget.prototype.addEventListener._original = superMethod;\n};\n\nconst supportsPassive = eventListenerOptionsSupported();\n\nif (supportsPassive) {\n  const addEvent = EventTarget.prototype.addEventListener;\n  overwriteAddEvent(addEvent);\n}\n","export const eventListenerOptionsSupported = () => {\n  let supported = false;\n\n  try {\n    const opts = Object.defineProperty({}, 'passive', {\n      get() {\n        supported = true;\n      }\n    });\n\n    window.addEventListener('test', null, opts);\n    window.removeEventListener('test', null, opts);\n  } catch (e) {}\n\n  return supported;\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}